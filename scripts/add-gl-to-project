#!/bin/bash

Color_Off='\033[0m'       # Text Reset
# Regular Colors
Red='\033[0;31m'          # Red
Green='\033[0;32m'        # Green
Blue='\033[0;34m'         # Blue
Yellow='\033[0;33m'       # Yellow
Purple='\033[0;35m'       # Purple

remove="${Purple}DELETE${Color_Off}"
success="${Green}SUCCESS${Color_Off}"
create="${Green}CREATE${Color_Off}"
update="${Green}UPDATE${Color_Off}"
error="${Red}ERROR${Color_Off}"
starting="${Yellow}STARTING${Color_Off}"
line="${Yellow}#################################${Color_Off}"
complete="${Yellow}COMPLETED${Color_Off}"

shell="s"
remote="r"
empty="empty"
name=$empty
install="n"
workspace=$empty
mfeType=$shell
basePath="/workspace"

command_msg(){
  if [ $? == 0 ] ; then
    echo -e "$1 $2"
  else
    echo -e "$error $2"
    exit 1
  fi
}

help_message() {
  if [[ $1 == "-h" ]]; then
    echo "Usage add-gl-to-project.sh -n {project name} -w {workspace} [options]";
    echo "-n: Project name"
    echo "-w: Angular workspace name workspace - hint: look at your lib {workspace}-lib";
    echo "OPTIONS:"
    echo "-t: MFE type s (shell) or r (remote): default (s)"
    echo "-i: install golden-layout default (n)"
    echo "-b: Root of the angular mono-repo"
    exit 1
  fi
}

validate_args() {

  if [[ $name == $empty || $workspace == $empty ]] ; then
    echo -e "$error Invalid arguments, please see help (-h)"
    echo "name: $name"
    echo "workspace: $workspace"
    echo "mfeType: $mfeType"
    echo "---------------------------------"
    help_message "-h"
    exit 1
  fi
}

while getopts n:w:t:i:b:h flag
do
    case "${flag}" in
        n) name=${OPTARG};;
        w) workspace=${OPTARG};;
        t) mfeType=${OPTARG};;
        b) basePath=${OPTARG};;
        i) install=${OPTARG};;
        h) help="-h";;
    esac
done

# display help message if -h is a commandline arg
help_message $help

validate_args

echo -e $line
echo -e "$starting Adding Golden Layout to project $name"

cd $basePath
projectPath="./projects/$name/src";
appPath="$projectPath/app"

if [[ $install == "y" || $install == "Y" ]]; then
    npm install golden-layout --save
    command_msg $success "Golden layout installed"
fi

mkdir -p $appPath/components/golden-layout
cp -r $basePath/templates/golden-layout/* $appPath/components/golden-layout/
command_msg $success "Golden layout templates added to project $name"

sed -i "s/{workspace}/$workspace/g" $appPath/components/golden-layout/golden-layout-component.service.ts
command_msg $update "$appPath/components/golden-layout/golden-layout-component.service.ts"

if [[ $mfeType == $shell ]]; then

  sed -i "s/{workspace}/$workspace/g" $appPath/components/golden-layout/boolean/boolean.component.ts
  command_msg $update "$appPath/components/golden-layout/boolean/boolean.component.ts"

  sed -i "s/{workspace}/$workspace/g" $appPath/components/golden-layout/text/text.component.ts
  command_msg $update "$appPath/components/golden-layout/text/text.component.ts"

  sed -i "s/{workspace}/$workspace/g" $appPath/components/golden-layout/color/color.component.ts
  command_msg $update "$appPath/components/golden-layout/color/color.component.ts"

else

  cp -r $basePath/templates/mfe/controls/* $appPath/components/golden-layout/controls/
  command_msg $update "add mfe golden layout controls"

  cp $basePath/templates/mfe/golden-layout-host.component.ts $appPath/components/golden-layout/golden-layout-host/golden-layout-host.component.ts
  command_msg $update "$appPath/components/golden-layout/golden-layout-host/golden-layout-host.component.ts"

  rm -rf $appPath/components/golden-layout/boolean
  command_msg $remove "$appPath/components/golden-layout/boolean"

  rm -rf $appPath/components/golden-layout/text
  command_msg $update "$appPath/components/golden-layout/text"

  rm -rf $appPath/components/golden-layout/color
  command_msg $update "$appPath/components/golden-layout/color"

  cp $basePath/templates/mfe/predefined-layouts.ts $appPath/components/golden-layout/predefined-layouts.ts
  command_msg $create "$appPath/components/golden-layout/predefined-layouts.ts"

  ./scripts/new-gl-component -n golden-layout-example -p $name -w $workspace -b $basePath

fi

sed -i "s/{workspace}/$workspace/g" $appPath/components/golden-layout/controls/controls.component.ts
command_msg $update "$appPath/components/golden-layout/controls/controls.component.ts"

sed -i "s/{workspace}/$workspace/g" $appPath/components/golden-layout/golden-layout-host/golden-layout-host.component.ts
command_msg $update "$appPath/components/golden-layout/golden-layout-host/golden-layout-host.component.ts"

mkdir -p $appPath/pages/golden-layout-example-page/
cp -r $basePath/templates/golden-layout-example-page/* $appPath/pages/golden-layout-example-page/
command_msg $success "Golden Layout example page copy"

cp $appPath/pages/golden-layout-example-page/golden-layout-example-page.component.spec.ts.txt $appPath/pages/golden-layout-example-page/golden-layout-example-page.component.spec.ts
command_msg $create "$appPath/pages/golden-layout-example-page/golden-layout-example-page.component.spec.ts"

rm $appPath/pages/golden-layout-example-page/golden-layout-example-page.component.spec.ts.txt
command_msg $remove "$appPath/pages/golden-layout-example-page/golden-layout-example-page.component.spec.ts.txt"

cp $appPath/pages/golden-layout-example-page/golden-layout-example-page.component.ts.txt $appPath/pages/golden-layout-example-page/golden-layout-example-page.component.ts
command_msg $create "$appPath/pages/golden-layout-example-page/golden-layout-example-page.component.ts"

rm $appPath/pages/golden-layout-example-page/golden-layout-example-page.component.ts.txt
command_msg $remove "$appPath/pages/golden-layout-example-page/golden-layout-example-page.component.ts.txt"

sed -i "/export const APP_ROUTES: Routes.*/i import { GoldenLayoutExamplePageComponent } from '../pages/golden-layout-example-page/golden-layout-example-page.component';" $appPath/router/app.routes.ts
command_msg $update "$appPath/router/app.routes.ts"

sed -i "/export const APP_ROUTES: Routes.*/a { path: 'golden-layout', component: GoldenLayoutExamplePageComponent }," $appPath/router/app.routes.ts
command_msg $update "$appPath/router/app.routes.ts"


mkdir -p $projectPath/css/
cp -r $basePath/templates/css/* $projectPath/css/
command_msg $success "Golden layout css copy"
mkdir -p $projectPath/img/
cp -r $basePath/templates/img/* $projectPath/img/
command_msg $success "Golden layout img copy"
cp -r $basePath/templates/styles.scss $projectPath/styles.scss
command_msg $update "$projectPath/styles.scss"

sed -i "/^@NgModule.*/i import { GoldenLayoutExamplePageComponent } from './pages/golden-layout-example-page/golden-layout-example-page.component';" $appPath/app.module.ts
command_msg $update "$appPath/app.module.ts"

if [[ $mfeType == $shell ]]; then

  sed -i "/^@NgModule.*/i import { ColorComponent } from './components/golden-layout/color/color.component';" $appPath/app.module.ts
  command_msg $update "$appPath/app.module.ts"
  sed -i "/^@NgModule.*/i import { TextComponent } from './components/golden-layout/text/text.component';" $appPath/app.module.ts
  command_msg $update "$appPath/app.module.ts"
  sed -i "/^@NgModule.*/i import { BooleanComponent } from './components/golden-layout/boolean/boolean.component';" $appPath/app.module.ts
  command_msg $update "$appPath/app.module.ts"

  sed -i "/declarations.*/a ColorComponent," $appPath/app.module.ts
  command_msg $update "$appPath/app.module.ts"
  sed -i "/declarations.*/a TextComponent," $appPath/app.module.ts
  command_msg $update "$appPath/app.module.ts"
  sed -i "/declarations.*/a BooleanComponent," $appPath/app.module.ts
  command_msg $update "$appPath/app.module.ts"

fi

sed -i "/^@NgModule.*/i import { ControlsComponent } from './components/golden-layout/controls/controls.component';" $appPath/app.module.ts
command_msg $update "$appPath/app.module.ts"
sed -i "/^@NgModule.*/i import { GoldenLayoutHostComponent } from './components/golden-layout/golden-layout-host/golden-layout-host.component';" $appPath/app.module.ts
command_msg $update "$appPath/app.module.ts"

sed -i "/declarations.*/a GoldenLayoutExamplePageComponent," $appPath/app.module.ts
command_msg $update "$appPath/app.module.ts"

sed -i "/declarations.*/a ControlsComponent," $appPath/app.module.ts
command_msg $update "$appPath/app.module.ts"
sed -i "/declarations.*/a GoldenLayoutHostComponent," $appPath/app.module.ts
command_msg $update "$appPath/app.module.ts"

echo '<div><a routerLink="/golden-layout">Golden Layout</a></div>' >> $appPath/pages/landing-page/landing-page.component.html
command_msg $update "$appPath/pages/landing-page/landing-page.component.html"


echo -e "$success Golden Layout added to project $name"
echo -e $line
